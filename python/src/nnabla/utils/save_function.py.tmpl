# Copyright 2018,2019,2020,2021 Sony Corporation.
# Copyright 2021 Sony Group Corporation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# *WARNING*
# THIS FILE IS AUTO-GENERATED BY CODE GENERATOR.
# PLEASE DO NOT EDIT THIS FILE BY HAND!
# If you want to modify this file, edit following files.
# - build-tools/code_generator/generator/generate_python_src_nnabla_utils_save_function_py.py
# - build-tools/code_generator/templates/python_src_nnabla_utils_save_function_py_template.py
'''
.. note::
    This module is auto-generated from

    - :file:`python/src/nnabla/utils/save_function.py`
    - :file:`build-tools/code_generator/generate.py`
'''

<%
def if_(i):
    if i == 0:
        return 'if'
    else:
        return 'elif'
def arg_field(name, arg):
    val = "function['args']['{}']".format(name)
    if arg['type'] == 'Shape':
        return "f.{}_param.{}.dim.extend({})".format(func['snake_name'], name, val)
    if arg['type'] == 'repeated int64':
        return "f.{}_param.{}.extend({})".format(func['snake_name'], name, val)
    if arg['type'] == 'repeated float':
        return "f.{}_param.{}.extend({})".format(func['snake_name'], name, val)
    if arg['type'] == 'bool':
        return "f.{}_param.{} = bool({})".format(func['snake_name'], name, val)
    return "f.{}_param.{} = {}".format(func['snake_name'], name, val)
    
%>
def _create_function_nntxt(f, name, function):
    f.name = name
    f.type = function['type']
    f.input.extend(function['inputs'])
    f.output.extend(function['outputs'])
% for i, (name, func) in enumerate(function_info.items()):
    ${if_(i)} f.type == '${name}':
% for argname, arg in func.get('arguments', {}).items():
        ${arg_field(argname, arg)}
% endfor
        pass
% endfor

